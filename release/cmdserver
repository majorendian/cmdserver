#!/usr/bin/env ruby

require "optparse"
require "bundler/setup"
require "cmdserver"

DEFAULT_WORKDIR = "~/.cmdserver"
DEFAULT_MODULE_DIR = DEFAULT_WORKDIR + "/modules"
DEFAULT_CONFIG = DEFAULT_WORKDIR + "/config"

options = {
    :workdir => DEFAULT_WORKDIR,
    :module_dir => DEFAULT_MODULE_DIR,
    :config => DEFAULT_CONFIG,
}
optparse = OptionParser.new do |opts|
    opts.banner = <<"HELP"
Usage: cmdserver [options]
HELP

    opts.on("-c", "--config CONFIG_FILE", "Load configuration from file") do |config_file|
        options[:config] = config_file
    end
    
    opts.on("-d", "--daemon", "Daemonize process") do
        options[:daemon] = true
    end

    opts.on("-p", "--port PORTNUM", "Specify arbitrary port") do |portarg|
        options[:port] = portarg
    end

    opts.on("-m", "--module-dir MODULE_DIR", "Load modules from MODULE_DIR of ~/.cmdserver/modules" ) do |module_dir|
        options[:module_dir] = module_dir
    end

    opts.on("-h", "--help", "Display this help message") do
        puts opts
        exit
    end
end

optparse.parse!


custom_settings = Cmdserver::CustomSettings.new(options[:workdir], options[:config], options[:module_dir])
port = options[:port] ? options[:port] : 2222
server = Cmdserver::TCPCommandServer.new(port, {}, settings=custom_settings)

begin
    if options[:daemon]
        pid = fork
        if not pid
            #child
            server.start()
        end
    else
        server.start()
    end
rescue Interrupt => ie
    puts
    puts "Terminating..."
    server.socket.close()
    exit
end
